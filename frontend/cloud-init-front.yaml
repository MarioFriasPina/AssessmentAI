#cloud-config

hostname: ig-drasil-front
fqdn: ig-drasil-front.local

users:
    - name: clouduser
      gecos: Main User
      sudo: ALL=(ALL) NOPASSWD:ALL
      groups: users, admin
      shell: /bin/bash
      lock_passwd: false
      ssh_pwauth: true
      ssh_authorized_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9Yj/fWkE13i9xt0rAkgaKGTvuDgGZ4uqqveuaDSafnKqvE0CuzajiEVie4LEwPsw1XfD9T6Fj06Oi8vqDJkKi0QZRcsJRrQXWJj1I0LqPSoATL2lxGBB4z0MSDdtd+hSxUZHHvJjHCLVBjoeZGOBzoYY4SEVDhgbgLMbp2vJoHGuhRLCNLfhrcHY6VGVf+Q85hci2jQroksH+bpOI+Dgtch0BPIcxM7Zr4XbSaCxkOXOwM+VMvY1Ey29wJwNUZrZyRdRcNIQp8WVbS/rtO/0pPqjf2KPHmofWA1kRvGNLgh1q2kDU2MwGefz+XEA6A+56J2BorHh6IFtOFAWJDQ3zKvUd22AxusrdFGf9eBXTi/u4M0O2ctxRBg1d01m0PBWJc2i+ELOt9YfQ7OgFW9o1YtQ/PdHhriFqEQaFtLc4m6qFKHf6J27WBSMLuhnAHUsidD1auDGHEprBk3zygrloLS00rmRsn3p0sNIfKGUsukcroz/geTwI4INeeWpZN6k= mfrias@LAPTOP-MARIO
# Explicit password configuration
chpasswd:
    list: |
        clouduser:ZGg8rQpu5bwJs7v
    expire: false

# Allow password-based SSH login
ssh_pwauth: true

package_update: true
package_upgrade: true

packages:
    - nginx
    - openssl
    - ufw
    - curl
    - openssh-server
    - htop
    - git
    - nodejs
    - npm

write_files:
    # Nginx configuration
    - path: /etc/nginx/sites-available/default
      content: |
          upstream api_backend {
              server 172.24.0.24:443;
              # Add more servers here for load balancing
              # server 172.24.0.205:443;
              # server 172.24.0.206:443;
          }
          server {
              listen 80;
              return 301 https://$host$request_uri;
          }
          server {
              listen 443 ssl default_server;
              ssl_certificate     /etc/ssl/igdrasil/cert.crt;
              ssl_certificate_key /etc/ssl/igdrasil/key.pem;
              location / {
                  root /var/www/html;
                  index index.html index.htm;
                  if ($request_method = OPTIONS ) {
                      add_header 'Access-Control-Allow-Origin' 'https://172.24.0.24';
                      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                      add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
                      add_header 'Access-Control-Max-Age' 1728000;
                      add_header 'Content-Length' 0;
                      add_header 'Content-Type' 'text/plain charset=UTF-8';
                      return 24;
                  }
                  if ($request_method = GET ) {
                      add_header 'Access-Control-Allow-Origin' 'https://172.24.0.24';
                  }
                  if ($request_method = POST ) {
                      add_header 'Access-Control-Allow-Origin' 'https://172.24.0.24';
                  }
              }
              location /ws {
                  proxy_pass https://api_backend;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_ssl_verify off;
              }
              location /api {
                  rewrite ^/api/(.*) /$1 break;
                  proxy_pass https://api_backend;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_set_header X-Passed $request_uri;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_ssl_verify off;
              }
          }

runcmd:
    # Get my IP to add to env
    - MYIP="$(hostname -I | awk '{print $1}')"

    # Enable and start ssh
    - systemctl enable ssh
    - systemctl restart ssh

    # Create the SSL cert
    - mkdir /etc/ssl/igdrasil
    - openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:4096 -keyout /etc/ssl/igdrasil/key.pem -out /etc/ssl/igdrasil/cert.crt -subj "/C=MX/ST=CDMX/L=CDMX/O=Ig-Drasil/CN=${MYIP}"
    - chmod 755 /etc/ssl/igdrasil/key.pem
    - chmod 755 /etc/ssl/igdrasil/cert.crt

    # Get the repository
    - export GIT_TERMINAL_PROMPT=0
    - su - clouduser -c "git clone https://github.com/MarioFriasPina/AssessmentAI.git /home/clouduser/ig-drasil-front"
    - chown -R clouduser:users /home/clouduser/ig-drasil-front

    # Copy the content of the repository's frontend folder to var/www/html, without the folder itself
    - cp -r /home/clouduser/ig-drasil-front/frontend/* /var/www/html

    # Allow traffic
    - ufw allow 'OpenSSH'
    - ufw allow 'Nginx Full'
    - ufw --force enable

    # Enable and start nginx
    - systemctl enable nginx
    - systemctl restart nginx

    # sudo scp -r clouduser@172.24.0.24:/certs/cert.crt /usr/local/share/ca-certificates/back.crt
    # ZGg8rQpu5bwJs7v
    # sudo update-ca-certificates

final_message: "Frontend server is up and running!"
