#cloud-config

hostname: ig-drasil-front
fqdn: ig-drasil-front.local

users:
    - name: clouduser
      gecos: Main User
      sudo: ALL=(ALL) NOPASSWD:ALL
      groups: users, admin
      shell: /bin/bash
      lock_passwd: false
      ssh_pwauth: true
      ssh_authorized_keys:
          - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC9Yj/fWkE13i9xt0rAkgaKGTvuDgGZ4uqqveuaDSafnKqvE0CuzajiEVie4LEwPsw1XfD9T6Fj06Oi8vqDJkKi0QZRcsJRrQXWJj1I0LqPSoATL2lxGBB4z0MSDdtd+hSxUZHHvJjHCLVBjoeZGOBzoYY4SEVDhgbgLMbp2vJoHGuhRLCNLfhrcHY6VGVf+Q85hci2jQroksH+bpOI+Dgtch0BPIcxM7Zr4XbSaCxkOXOwM+VMvY1Ey29wJwNUZrZyRdRcNIQp8WVbS/rtO/0pPqjf2KPHmofWA1kRvGNLgh1q2kDU2MwGefz+XEA6A+56J2BorHh6IFtOFAWJDQ3zKvUd22AxusrdFGf9eBXTi/u4M0O2ctxRBg1d01m0PBWJc2i+ELOt9YfQ7OgFW9o1YtQ/PdHhriFqEQaFtLc4m6qFKHf6J27WBSMLuhnAHUsidD1auDGHEprBk3zygrloLS00rmRsn3p0sNIfKGUsukcroz/geTwI4INeeWpZN6k= mfrias@LAPTOP-MARIO
# Explicit password configuration
chpasswd:
    list: |
        clouduser:ZGg8rQpu5bwJs7v
    expire: false

# Allow password-based SSH login
ssh_pwauth: true

package_update: true
package_upgrade: true

packages:
    - openssh-client
    - curl
    - git
    - nginx
    - ufw
    - htop
    - nodejs
    - npm

write_files:
    # Append backend to hosts file
    - path: /etc/hosts
      content: |
          172.24.0.200 backend.igdrasil.local
      append: true

    # Nginx configuration
    - path: /etc/nginx/sites-available/default
      content: |
          server {
              listen 443 ssl;

              server_name ig-drasil-front;

              ssl_certificate     /etc/ssl/igdrasil/cert.crt;
              ssl_certificate_key /etc/ssl/igdrasil/key.pem;

              location / {
                  root /var/www/html;
                  index index.html index.htm;
              }
          }
          server {
              listen 80;
              server_name ig-drasil-front;

              location / {
                  return 301 https://$host$request_uri;
              }
          }

runcmd:
    # Get my IP to add to env
    - MY_IP="$(hostname -I | awk '{print $1}')"

    # Enable and start ssh
    - systemctl enable ssh
    - systemctl restart ssh

    # 1) Wait until the backend’s HTTP server is up
    - |
        BACKEND_HOST="backend.igdrasil.local"
        n=0
        until nc -z -w3 $BACKEND_HOST 8080; do
            n=$((n+1))
            if [ $n -gt 10 ]; then
            echo "ERROR: backend HTTP server never became reachable" >&2
            exit 1
            fi
            echo "Waiting for backend HTTP…"
            sleep 2
        done
        echo "Backend HTTP is now up"

    # 2) Create local directory for the cert
    - mkdir -p /etc/ssl/igdrasil

    # 3) Download the backend’s cert + key via HTTP
    - wget -O /etc/ssl/igdrasil/cert.crt http://backend.igdrasil.local:8080/cert.crt
    - wget -O /etc/ssl/igdrasil/key.pem  http://backend.igdrasil.local:8080/key.pem
    - chmod 644 /etc/ssl/igdrasil/cert.crt
    - chmod 600 /etc/ssl/igdrasil/key.pem

    # 4) Install the cert into the frontend’s trust store
    - cp /etc/ssl/igdrasil/cert.crt /usr/local/share/ca-certificates/igdrasil-backend.crt
    - update-ca-certificates

    # Create ssh key with current IP
    - mkdir /etc/ssl/igdrasil
    - openssl req -x509 -sha256 -nodes -days 365 -newkey rsa:4096 -keyout /etc/ssl/igdrasil/front_key.pem -out /etc/ssl/igdrasil/front_cert.crt -subj "/C=MX/ST=CDMX/L=CDMX/O=Ig-Drasil/CN=${MY_IP}"
    - chmod 755 /etc/ssl/igdrasil/front_key.pem
    - chmod 755 /etc/ssl/igdrasil/front_cert.crt

    # Get the repository
    - export GIT_TERMINAL_PROMPT=0
    - su - clouduser -c "git clone https://github.com/MarioFriasPina/AssessmentAI.git /home/clouduser/ig-drasil-front"
    - chown -R clouduser:users /home/clouduser/ig-drasil-front

    # Copy the content of the repository's frontend folder to var/www/html, without the folder itself
    - cp -r /home/clouduser/ig-drasil-front/frontend/* /var/www/html

    # Allow traffic
    - ufw allow 'OpenSSH'
    - ufw allow 'Nginx Full'
    - ufw --force enable

    # Enable and start nginx
    - systemctl enable nginx
    - systemctl restart nginx

final_message: "Frontend server is up and running!"
